name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build e Push do Backend
      - name: Build and Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # 5. Build e Push do Frontend
      - name: Build and Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # 6. Verificar o diretório de trabalho
      - name: Verify workspace directory
        run: ls -la ${{ github.workspace }}

      # 7. Sincronizar arquivos com o servidor pegando os arquivos do workspace e jogando na pasta do projeto
      - name: Sync repository with server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            rsync -avz --delete ${{ github.workspace }}/ /var/www/lpn2025/

      # 8. Deploy no Servidor
      - name: Deploy to Production
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker-compose --version || sudo apt-get install -y docker-compose-plugin
            cd /var/www/lpn2025
            docker-compose down || true
            docker-compose pull
            docker-compose up -d --no-deps backend frontend
