# A versão é obsoleta, então a removemos para limpar os avisos.
services:
  nginx:
    # O build agora usa o Dockerfile corrigido da pasta ./nginx
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Os volumes de configuração não são mais necessários aqui,
      # pois o build da imagem já copia o nginx.prod.conf.
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      # Monta o volume com os arquivos do frontend construídos
      - frontend_build:/usr/share/nginx/html
      # Monta os uploads do backend
      - ./backend/uploads:/usr/share/nginx/html/uploads
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  backend:
    build: ./backend
    image: ${DOCKER_USERNAME:-default_user}/backend:latest
    environment:
      # ... suas variáveis de ambiente ...
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./backend/uploads:/app/uploads
    ports:
      - "5000:5000"
    command: sh -c "./wait-for.sh db 3306 && npm start"
    depends_on:
      - db

  frontend:
    # Este serviço apenas constrói a imagem e popula o volume.
    # Ele não precisa ficar rodando.
    build: ./frontend
    image: lpn2025-frontend-image
    volumes:
      - frontend_build:/app/build

  db:
    image: mysql:8.0
    environment:
      # ... suas variáveis de ambiente ...
    volumes:
      # O volume 'db_data' é montado aqui
      - db_data:/var/lib/mysql
      - ./backend/config/my.cnf:/etc/mysql/conf.d/my.cnf

# Declaração de volumes
volumes:
  frontend_build:
  # PROTEÇÃO DO BANCO DE DADOS:
  # Declarar o volume como externo impede que 'docker-compose down --volumes' o remova.
  db_data:
    external: true
