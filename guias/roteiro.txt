/backend:
    /config: Configuração do banco de dados.
    /controllers: Funções de controle para lidar com as requisições.
    /models: Modelos do banco de dados.
    /routes: Rotas da API.
    /middleware: Middlewares personalizados, como autenticação.
    index.js: Ponto de entrada do servidor Express.

/frontend: React.
    /public: Arquivos públicos como HTML.
    /src: Código fonte do React.
    /components: Componentes reutilizáveis.
    /pages: Páginas principais do aplicativo.
    /services: Configuração de Axios e chamadas à API.
    /utils: Funções utilitárias e helpers.
    App.js: Componente principal do React.
    index.js: Ponto de entrada do React.
    styles.css: Estilos globais.

FRONTEND
npm install react-router-dom
npm install pdfmake
npm install pdffonts
npm install jwt-decode //para decodificar os dados presentes nos tokens


cria a routes.js dentro do src
chama o <AppRoutes /> lá no index.js do src

npm install axios


BACKEND
npm init -y
npm install express
npm install --save-dev nodemon
npm install mysql2
npm install dotenv //dotenv permite que armazene informações sensíveis, como as credenciais do banco de dados, em um arquivo separado (.env) 
npm install cors helmet body-parser //cors e helmet seguranca em requisições, body-parser leitura do json entre front e back
npm install xlsx multer //xlsx para lidar com planilhas e multer para uploads
npm install bcrypt //Biblioteca para hash de senhas.
npm install jsonwebtoken //Função: Geração e verificação de tokens para autenticação.Padrão de autenticação stateless . Alternativa: OAuth com Passport.js c/ integração com Google, Facebook.
npm install express-validator //Facilita a autenticação com JWT sem escrever lógica manual.




criar server.js
npm install npm-run-all //NA RAIZ PARA RODAR JUNTOS BACK E FRONT



certbot, criação do primeiro certificado https:
docker-compose run --rm certbot certonly --webroot \
  -w /var/www/certbot \
  -d ligapaulistadenatacao.com.br -d www.ligapaulistadenatacao.com.br

certbot autoassinado para testes locais (executa local)
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout "C:\PROJETOS\lpn\certificados\privkey.pem" -out "C:\PROJETOS\lpn\certificados\fullchain.pem" -subj "/CN=localhost"


